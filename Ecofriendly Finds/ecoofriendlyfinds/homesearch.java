/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ecoofriendlyfinds;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.awt.Image;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import productsui.*;

/**
 *
 * @author Varun
 */
public class homesearch extends javax.swing.JFrame {

    /**
     * Creates new form homesearch
     */
    public homesearch() {
        initComponents();
        displayproducts();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    private int currentRow = 0;

    private void displayproducts() {
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/databasemain", "root", "ARYA#305#varun");
            Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            ResultSet rs = stmt.executeQuery("SELECT * FROM display");

            if (rs.absolute(currentRow + 1)) { //Moves to the specific row in the data

                String productName1 = rs.getString("productname");//Gets the product's name from the current row.
                String productID1 = rs.getString("productid"); //Gets the product's ID from the current row.
                byte[] img1 = rs.getBytes("productimg"); //Gets the image from the current row.

                ImageIcon image1 = new ImageIcon(img1); //Creates an icon from the image data.
                Image im1 = image1.getImage();
                Image myImg1 = im1.getScaledInstance(productimg.getWidth(), productimg.getHeight(), Image.SCALE_SMOOTH); // Scales the image to fit the label's size.
                ImageIcon newImage1 = new ImageIcon(myImg1); // Creates a new icon with the scaled image.

                productimg.setIcon(newImage1); // Sets the label's icon to the newly created one.
                productname.setText(productName1); //Sets the label's text to the product's name.
                productid.setText(productID1); //Sets the label's text to the product's ID.
            }

            if (rs.absolute(currentRow + 2)) {

                String productName2 = rs.getString("productname");
                String productID2 = rs.getString("productid");
                byte[] img2 = rs.getBytes("productimg");

                ImageIcon image2 = new ImageIcon(img2);
                Image im2 = image2.getImage();
                Image myImg2 = im2.getScaledInstance(productimg2.getWidth(), productimg2.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon newImage2 = new ImageIcon(myImg2);
                productimg2.setIcon(newImage2);

                productname2.setText(productName2);
                productid2.setText(productID2);
            }

            if (rs.absolute(currentRow + 3)) {
                String productName3 = rs.getString("productname");
                String productID3 = rs.getString("productid");
                byte[] img3 = rs.getBytes("productimg");

                ImageIcon image3 = new ImageIcon(img3);
                Image im3 = image3.getImage();
                Image myImg3 = im3.getScaledInstance(productimg3.getWidth(), productimg3.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon newImage3 = new ImageIcon(myImg3);
                productimg3.setIcon(newImage3);

                productname3.setText(productName3);
                productid3.setText(productID3);
            }

            if (rs.absolute(currentRow + 4)) {
                String productName4 = rs.getString("productname");
                String productID4 = rs.getString("productid");
                byte[] img4 = rs.getBytes("productimg");

                ImageIcon image4 = new ImageIcon(img4);
                Image im4 = image4.getImage();
                Image myImg4 = im4.getScaledInstance(productimg4.getWidth(), productimg4.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon newImage4 = new ImageIcon(myImg4);
                productimg4.setIcon(newImage4);

                productname4.setText(productName4);
                productid4.setText(productID4);
            }

            if (rs.absolute(currentRow + 5)) {
                String productName5 = rs.getString("productname");
                String productID5 = rs.getString("productid");
                byte[] img5 = rs.getBytes("productimg");

                ImageIcon image5 = new ImageIcon(img5);
                Image im5 = image5.getImage();
                Image myImg5 = im5.getScaledInstance(productimg5.getWidth(), productimg5.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon newImage5 = new ImageIcon(myImg5);
                productimg5.setIcon(newImage5);

                productname5.setText(productName5);
                productid5.setText(productID5);
            }

            if (rs.absolute(currentRow + 6)) {
                String productName6 = rs.getString("productname");
                String productID6 = rs.getString("productid");
                byte[] img6 = rs.getBytes("productimg");

                ImageIcon image6 = new ImageIcon(img6);
                Image im6 = image6.getImage();
                Image myImg6 = im6.getScaledInstance(productimg6.getWidth(), productimg6.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon newImage6 = new ImageIcon(myImg6);
                productimg6.setIcon(newImage6);

                productname6.setText(productName6);
                productid6.setText(productID6);
            }

            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Login = new javax.swing.JButton();
        Signin = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        search = new javax.swing.JTextField();
        productimg = new javax.swing.JLabel();
        productname = new javax.swing.JLabel();
        productid = new javax.swing.JLabel();
        productimg2 = new javax.swing.JLabel();
        productname2 = new javax.swing.JLabel();
        productid2 = new javax.swing.JLabel();
        productimg4 = new javax.swing.JLabel();
        productname4 = new javax.swing.JLabel();
        productid4 = new javax.swing.JLabel();
        productimg5 = new javax.swing.JLabel();
        productname5 = new javax.swing.JLabel();
        productid5 = new javax.swing.JLabel();
        productimg6 = new javax.swing.JLabel();
        productname6 = new javax.swing.JLabel();
        productid6 = new javax.swing.JLabel();
        wishlist = new javax.swing.JButton();
        wishlist2 = new javax.swing.JButton();
        wishlist3 = new javax.swing.JButton();
        wishlist4 = new javax.swing.JButton();
        wishlist5 = new javax.swing.JButton();
        wishlist6 = new javax.swing.JButton();
        back = new javax.swing.JButton();
        next = new javax.swing.JButton();
        productimg3 = new javax.swing.JLabel();
        productname3 = new javax.swing.JLabel();
        productid3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1091, 600));

        jPanel1.setBackground(new java.awt.Color(153, 255, 153));

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ecoofriendlyfinds/icons8-maple-leaf-26.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("EcoFriendlyFinds");

        Login.setBackground(new java.awt.Color(255, 255, 255));
        Login.setForeground(new java.awt.Color(0, 0, 0));
        Login.setText("Login");
        Login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginActionPerformed(evt);
            }
        });

        Signin.setBackground(new java.awt.Color(255, 255, 255));
        Signin.setForeground(new java.awt.Color(0, 0, 0));
        Signin.setText("Signin");
        Signin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SigninActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 614, Short.MAX_VALUE)
                .addComponent(Signin, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Login, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Login)
                            .addComponent(Signin)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));

        search.setToolTipText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchKeyPressed(evt);
            }
        });

        wishlist.setBackground(new java.awt.Color(0, 0, 0));
        wishlist.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        wishlist.setForeground(new java.awt.Color(255, 255, 255));
        wishlist.setText("Wishlist");
        wishlist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wishlistActionPerformed(evt);
            }
        });

        wishlist2.setBackground(new java.awt.Color(0, 0, 0));
        wishlist2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        wishlist2.setForeground(new java.awt.Color(255, 255, 255));
        wishlist2.setText("Wishlist");
        wishlist2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wishlist2ActionPerformed(evt);
            }
        });

        wishlist3.setBackground(new java.awt.Color(0, 0, 0));
        wishlist3.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        wishlist3.setForeground(new java.awt.Color(255, 255, 255));
        wishlist3.setText("Wishlist");
        wishlist3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wishlist3ActionPerformed(evt);
            }
        });

        wishlist4.setBackground(new java.awt.Color(0, 0, 0));
        wishlist4.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        wishlist4.setForeground(new java.awt.Color(255, 255, 255));
        wishlist4.setText("Wishlist");
        wishlist4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wishlist4ActionPerformed(evt);
            }
        });

        wishlist5.setBackground(new java.awt.Color(0, 0, 0));
        wishlist5.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        wishlist5.setForeground(new java.awt.Color(255, 255, 255));
        wishlist5.setText("Wishlist");
        wishlist5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wishlist5ActionPerformed(evt);
            }
        });

        wishlist6.setBackground(new java.awt.Color(0, 0, 0));
        wishlist6.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        wishlist6.setForeground(new java.awt.Color(255, 255, 255));
        wishlist6.setText("Wishlist");
        wishlist6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wishlist6ActionPerformed(evt);
            }
        });

        back.setBackground(new java.awt.Color(0, 0, 0));
        back.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        back.setForeground(new java.awt.Color(255, 255, 255));
        back.setText("<BACK");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        next.setBackground(new java.awt.Color(0, 0, 0));
        next.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        next.setForeground(new java.awt.Color(255, 255, 255));
        next.setText("NEXT>");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Customer support");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("About us");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Show wishlist");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("View");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("View");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("View");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("View");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("View");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("View");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(87, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(productimg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(productname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(productid, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(161, 161, 161))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(wishlist, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(135, 135, 135))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(productimg4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(productname4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(productid4, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(161, 161, 161)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(wishlist2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(productimg5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(productname5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(productid5, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(productimg2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(productname2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(productid2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(179, 179, 179))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(wishlist4, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(wishlist5, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(174, 174, 174))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)))))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(productimg6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(productname6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(productid6, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(productname3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(productimg3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(productid3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(109, 109, 109))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(wishlist3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(wishlist6, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)
                            .addComponent(jButton3)
                            .addComponent(jButton4))
                        .addGap(54, 54, 54)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(productimg, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(productname, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(productid, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(productimg3, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                                    .addComponent(productimg2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(productname2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(productname3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(productid2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(productid3, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(wishlist)
                            .addComponent(wishlist2)
                            .addComponent(wishlist3)
                            .addComponent(jButton5)
                            .addComponent(jButton6)
                            .addComponent(jButton7))
                        .addGap(77, 77, 77)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(productimg4, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(productname4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(productid4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(productimg5, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(productname5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(productid5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(productimg6, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(productname6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(productid6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(wishlist6)
                            .addComponent(wishlist5)
                            .addComponent(jButton9)
                            .addComponent(jButton10))
                        .addGap(64, 64, 64))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(wishlist4)
                            .addComponent(jButton8))
                        .addGap(74, 74, 74)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(next)
                    .addComponent(back))
                .addContainerGap(413, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel3);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1082, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1080, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 897, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(104, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void LoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginActionPerformed
        Login Login = new Login();
        Login.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_LoginActionPerformed

    private void SigninActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SigninActionPerformed
        signin signin = new signin();
        signin.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_SigninActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchActionPerformed

    private void searchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_searchKeyPressed

    private void wishlist3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wishlist3ActionPerformed
        // TODO add your handling code here:
        if (isLoggedIn) {
            // The user is logged in, perform the Wishlist action
            performWishlistAction();
        } else {
            // The user is not logged in, show a dialog
            int choice = JOptionPane.showConfirmDialog(
                    this, "You need to log in or sign up to add items to your Wishlist. Do you want to log in now?",
                    "Login Required", JOptionPane.YES_NO_OPTION);

            if (choice == JOptionPane.YES_OPTION) {
                // Open your login or sign-up dialog
                openLoginDialog();
            }
        }
        String productID = productid3.getText(); // Assuming prodid is the product ID label
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/databasemain", "root", "ARYA#305#varun");
            Statement stmt = con.createStatement();
            String insertQuery = "INSERT INTO wishlist (productid) VALUES ('" + productID + "')";
            stmt.executeUpdate(insertQuery);
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_wishlist3ActionPerformed

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        // TODO add your handling code here:
        currentRow += 2;
        displayproducts();
    }//GEN-LAST:event_nextActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        try {
            if (currentRow > 0) {
                currentRow -= 2;
                displayproducts();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_backActionPerformed
    boolean isLoggedIn = false;

    private void wishlistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wishlistActionPerformed

        // TODO add your handling code here:
        if (isLoggedIn) {
            // The user is logged in, perform the Wishlist action
          
            performWishlistAction();
        } else {
            
            // The user is not logged in, show a dialog
            int choice = JOptionPane.showConfirmDialog(
                    this, "You need to log in or sign up to add items to your Wishlist. Do you want to log in now?",
                    "Login Required", JOptionPane.YES_NO_OPTION);

            if (choice == JOptionPane.YES_OPTION) {
                // Open your login or sign-up dialog
                openLoginDialog();
            }
            
        }

        // Implement your Wishlist action here
        String productID = productid.getText(); // Assuming prodid is the product ID label
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/databasemain", "root", "ARYA#305#varun");
            Statement stmt = con.createStatement();
            String insertQuery = "INSERT INTO wishlist (productid) VALUES ('" + productID + "')";
            stmt.executeUpdate(insertQuery);
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void openLoginDialog() {
        // Implement code to open your login or sign-up dialog here
        Login Logins = new Login();
        Logins.setVisible(true);
        this.dispose();


    }//GEN-LAST:event_wishlistActionPerformed

    private void wishlist2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wishlist2ActionPerformed
        // TODO add your handling code here:
        if (isLoggedIn) {
            // The user is logged in, perform the Wishlist action
            performWishlistAction();
        } else {
            // The user is not logged in, show a dialog
            int choice = JOptionPane.showConfirmDialog(
                    this, "You need to log in or sign up to add items to your Wishlist. Do you want to log in now?",
                    "Login Required", JOptionPane.YES_NO_OPTION);

            if (choice == JOptionPane.YES_OPTION) {
                // Open your login or sign-up dialog
                openLoginDialog();
            }
        }
        String productID = productid2.getText(); // Assuming prodid is the product ID label
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/databasemain", "root", "ARYA#305#varun");
            Statement stmt = con.createStatement();
            String insertQuery = "INSERT INTO wishlist (productid) VALUES ('" + productID + "')";
            stmt.executeUpdate(insertQuery);
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_wishlist2ActionPerformed

    private void wishlist4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wishlist4ActionPerformed
        // TODO add your handling code here:
        if (isLoggedIn) {
            // The user is logged in, perform the Wishlist action
            performWishlistAction();
        } else {
            // The user is not logged in, show a dialog
            int choice = JOptionPane.showConfirmDialog(
                    this, "You need to log in or sign up to add items to your Wishlist. Do you want to log in now?",
                    "Login Required", JOptionPane.YES_NO_OPTION);

            if (choice == JOptionPane.YES_OPTION) {
                // Open your login or sign-up dialog
                openLoginDialog();
            }
        }
        String productID = productid4.getText(); // Assuming prodid is the product ID label
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/databasemain", "root", "ARYA#305#varun");
            Statement stmt = con.createStatement();
            String insertQuery = "INSERT INTO wishlist (productid) VALUES ('" + productID + "')";
            stmt.executeUpdate(insertQuery);
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_wishlist4ActionPerformed

    private void wishlist5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wishlist5ActionPerformed
        // TODO add your handling code here:
        if (isLoggedIn) {
            // The user is logged in, perform the Wishlist action
            performWishlistAction();
        } else {
            // The user is not logged in, show a dialog
            int choice = JOptionPane.showConfirmDialog(
                    this, "You need to log in or sign up to add items to your Wishlist. Do you want to log in now?",
                    "Login Required", JOptionPane.YES_NO_OPTION);

            if (choice == JOptionPane.YES_OPTION) {
                // Open your login or sign-up dialog
                openLoginDialog();
            }
        }
        String productID = productid5.getText(); // Assuming prodid is the product ID label
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/databasemain", "root", "ARYA#305#varun");
            Statement stmt = con.createStatement();
            String insertQuery = "INSERT INTO wishlist (productid) VALUES ('" + productID + "')";
            stmt.executeUpdate(insertQuery);
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_wishlist5ActionPerformed

    private void wishlist6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wishlist6ActionPerformed
        // TODO add your handling code here:
        if (isLoggedIn) {
            // The user is logged in, perform the Wishlist action
            performWishlistAction();
        } else {
            // The user is not logged in, show a dialog
            int choice = JOptionPane.showConfirmDialog(
                    this, "You need to log in or sign up to add items to your Wishlist. Do you want to log in now?",
                    "Login Required", JOptionPane.YES_NO_OPTION);

            if (choice == JOptionPane.YES_OPTION) {
                // Open your login or sign-up dialog
                openLoginDialog();
            }
        }
        String productID = productid6.getText(); // Assuming prodid is the product ID label
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/databasemain", "root", "ARYA#305#varun");
            Statement stmt = con.createStatement();
            String insertQuery = "INSERT INTO wishlist (productid) VALUES ('" + productID + "')";
            stmt.executeUpdate(insertQuery);
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_wishlist6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String inputProductName = search.getText();
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/databasemain", "root", "ARYA#305#varun");
            Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            ResultSet rs = stmt.executeQuery("SELECT * FROM display WHERE productname LIKE '%" + inputProductName + "%'");

            if (rs.next()) {
                String productName1 = rs.getString("productname");
                String productID1 = rs.getString("productid");
                byte[] img1 = rs.getBytes("productimg");

                ImageIcon image1 = new ImageIcon(img1);
                Image im1 = image1.getImage();
                Image myImg1 = im1.getScaledInstance(productimg.getWidth(), productimg.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon newImage1 = new ImageIcon(myImg1);

                productimg.setIcon(newImage1);
                productname.setText(productName1);
                productid.setText(productID1);

            } else {
                productimg.setIcon(null);
                productname.setText("");
                productid.setText("");
            }
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        customersuppor customersuppor = new customersuppor();
        customersuppor.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Aboutus Aboutus = new Aboutus();
        Aboutus.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        wishlist wishlist = new wishlist();
        wishlist.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        String Productid5 = productid5.getText();
        Connection sqlConn;
        Statement st;
        ResultSet rs = null;

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            sqlConn = DriverManager.getConnection("jdbc:mysql://localhost:3306/databasemain", "root", "ARYA#305#varun");
            st = sqlConn.createStatement();

            rs = st.executeQuery("select * from display where productid='" + Productid5 + "'");
            pro3 p = new pro3();

            rs.next();
            byte[] img1 = rs.getBytes("productimg"); //Gets the image from the current row.

            ImageIcon image1 = new ImageIcon(img1); //Creates an icon from the image data.
            Image im1 = image1.getImage();
            Image myImg1 = im1.getScaledInstance(p.proimg.getWidth(), p.proimg.getHeight(), Image.SCALE_SMOOTH); // Scales the image to fit the label's size.
            ImageIcon newImage1 = new ImageIcon(myImg1); // Creates a new icon with the scaled image.

            p.proimg.setIcon(newImage1); //
            p.title.setText(rs.getString("productname"));
            p.prodescription.setText(rs.getString("description"));
            p.highlights.setText(rs.getString("highlight"));
            String WebA = rs.getString("web1");
            String webB = rs.getString("web2");
            p.Web1.setText(WebA);
            p.web2.setText(webB);
            p.price1.setText(rs.getString("price1"));
            p.price21.setText(rs.getString("price2"));

            p.setVisible(true);
            this.dispose();

        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ECO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(ECO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);

        }

    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        String Productid2 = productid2.getText();
        Connection sqlConn;
        Statement st;
        ResultSet rs = null;

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            sqlConn = DriverManager.getConnection("jdbc:mysql://localhost:3306/databasemain", "root", "ARYA#305#varun");
            st = sqlConn.createStatement();

            rs = st.executeQuery("select * from display where productid='" + Productid2 + "'");
            pro3 p = new pro3();

            rs.next();
            byte[] img1 = rs.getBytes("productimg"); //Gets the image from the current row.

            ImageIcon image1 = new ImageIcon(img1); //Creates an icon from the image data.
            Image im1 = image1.getImage();
            Image myImg1 = im1.getScaledInstance(p.proimg.getWidth(), p.proimg.getHeight(), Image.SCALE_SMOOTH); // Scales the image to fit the label's size.
            ImageIcon newImage1 = new ImageIcon(myImg1); // Creates a new icon with the scaled image.

            p.proimg.setIcon(newImage1); //
            p.title.setText(rs.getString("productname"));
            p.prodescription.setText(rs.getString("description"));
            p.highlights.setText(rs.getString("highlight"));
            String WebA = rs.getString("web1");
            String webB = rs.getString("web2");
            p.Web1.setText(WebA);
            p.web2.setText(webB);
            p.price1.setText(rs.getString("price1"));
            p.price21.setText(rs.getString("price2"));

            p.setVisible(true);
            this.dispose();

        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ECO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(ECO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);

        }


    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        String Productid = productid.getText();
        Connection sqlConn;
        Statement st;
        ResultSet rs = null;

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            sqlConn = DriverManager.getConnection("jdbc:mysql://localhost:3306/databasemain", "root", "ARYA#305#varun");
            st = sqlConn.createStatement();

            rs = st.executeQuery("select * from display where productid='" + Productid + "'");
            pro2 p = new pro2();

            rs.next();
            byte[] img1 = rs.getBytes("productimg"); //Gets the image from the current row.

            ImageIcon image1 = new ImageIcon(img1); //Creates an icon from the image data.
            Image im1 = image1.getImage();
            Image myImg1 = im1.getScaledInstance(p.proimg.getWidth(), p.proimg.getHeight(), Image.SCALE_SMOOTH); // Scales the image to fit the label's size.
            ImageIcon newImage1 = new ImageIcon(myImg1); // Creates a new icon with the scaled image.

            p.proimg.setIcon(newImage1); //
            p.title.setText(rs.getString("productname"));
            p.prodescription.setText(rs.getString("description"));
            p.highlights.setText(rs.getString("highlight"));
            String WebA = rs.getString("web1");
            String webB = rs.getString("web2");
            p.Web1.setText(WebA);
            p.web2.setText(webB);
            p.price1.setText(rs.getString("price1"));
            p.price2.setText(rs.getString("price2"));

            p.setVisible(true);
            this.dispose();

        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ECO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(ECO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);

        }


    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        String Productid3 = productid3.getText();
        Connection sqlConn;
        Statement st;
        ResultSet rs = null;

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            sqlConn = DriverManager.getConnection("jdbc:mysql://localhost:3306/databasemain", "root", "ARYA#305#varun");
            st = sqlConn.createStatement();

            rs = st.executeQuery("select * from display where productid='" + Productid3 + "'");
            pro3 p = new pro3();

            rs.next();
            byte[] img1 = rs.getBytes("productimg"); //Gets the image from the current row.

            ImageIcon image1 = new ImageIcon(img1); //Creates an icon from the image data.
            Image im1 = image1.getImage();
            Image myImg1 = im1.getScaledInstance(p.proimg.getWidth(), p.proimg.getHeight(), Image.SCALE_SMOOTH); // Scales the image to fit the label's size.
            ImageIcon newImage1 = new ImageIcon(myImg1); // Creates a new icon with the scaled image.

            p.proimg.setIcon(newImage1); //
            p.title.setText(rs.getString("productname"));
            p.prodescription.setText(rs.getString("description"));
            p.highlights.setText(rs.getString("highlight"));
            String WebA = rs.getString("web1");
            String webB = rs.getString("web2");
            p.Web1.setText(WebA);
            p.web2.setText(webB);
            p.price1.setText(rs.getString("price1"));
            p.price21.setText(rs.getString("price2"));

            p.setVisible(true);
            this.dispose();

        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ECO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(ECO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);

        }


    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        String Productid4 = productid4.getText();
        Connection sqlConn;
        Statement st;
        ResultSet rs = null;

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            sqlConn = DriverManager.getConnection("jdbc:mysql://localhost:3306/databasemain", "root", "ARYA#305#varun");
            st = sqlConn.createStatement();

            rs = st.executeQuery("select * from display where productid='" + Productid4 + "'");
            pro3 p = new pro3();

            rs.next();
            byte[] img1 = rs.getBytes("productimg"); //Gets the image from the current row.

            ImageIcon image1 = new ImageIcon(img1); //Creates an icon from the image data.
            Image im1 = image1.getImage();
            Image myImg1 = im1.getScaledInstance(p.proimg.getWidth(), p.proimg.getHeight(), Image.SCALE_SMOOTH); // Scales the image to fit the label's size.
            ImageIcon newImage1 = new ImageIcon(myImg1); // Creates a new icon with the scaled image.

            p.proimg.setIcon(newImage1); //
            p.title.setText(rs.getString("productname"));
            p.prodescription.setText(rs.getString("description"));
            p.highlights.setText(rs.getString("highlight"));
            String WebA = rs.getString("web1");
            String webB = rs.getString("web2");
            p.Web1.setText(WebA);
            p.web2.setText(webB);
            p.price1.setText(rs.getString("price1"));
            p.price21.setText(rs.getString("price2"));

            p.setVisible(true);
            this.dispose();

        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ECO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(ECO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);

        }


    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        String Productid6 = productid6.getText();
        Connection sqlConn;
        Statement st;
        ResultSet rs = null;

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            sqlConn = DriverManager.getConnection("jdbc:mysql://localhost:3306/databasemain", "root", "ARYA#305#varun");
            st = sqlConn.createStatement();

            rs = st.executeQuery("select * from display where productid='" + Productid6 + "'");
            pro3 p = new pro3();

            rs.next();
            byte[] img1 = rs.getBytes("productimg"); //Gets the image from the current row.

            ImageIcon image1 = new ImageIcon(img1); //Creates an icon from the image data.
            Image im1 = image1.getImage();
            Image myImg1 = im1.getScaledInstance(p.proimg.getWidth(), p.proimg.getHeight(), Image.SCALE_SMOOTH); // Scales the image to fit the label's size.
            ImageIcon newImage1 = new ImageIcon(myImg1); // Creates a new icon with the scaled image.

            p.proimg.setIcon(newImage1); //
            p.title.setText(rs.getString("productname"));
            p.prodescription.setText(rs.getString("description"));
            p.highlights.setText(rs.getString("highlight"));
            String WebA = rs.getString("web1");
            String webB = rs.getString("web2");
            p.Web1.setText(WebA);
            p.web2.setText(webB);
            p.price1.setText(rs.getString("price1"));
            p.price21.setText(rs.getString("price2"));

            p.setVisible(true);
            this.dispose();

        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ECO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(ECO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);

        }

    }//GEN-LAST:event_jButton10ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(homesearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(homesearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(homesearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(homesearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new homesearch().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Login;
    private javax.swing.JButton Signin;
    private javax.swing.JButton back;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton next;
    private javax.swing.JLabel productid;
    private javax.swing.JLabel productid2;
    private javax.swing.JLabel productid3;
    private javax.swing.JLabel productid4;
    private javax.swing.JLabel productid5;
    private javax.swing.JLabel productid6;
    private javax.swing.JLabel productimg;
    private javax.swing.JLabel productimg2;
    private javax.swing.JLabel productimg3;
    private javax.swing.JLabel productimg4;
    private javax.swing.JLabel productimg5;
    private javax.swing.JLabel productimg6;
    private javax.swing.JLabel productname;
    private javax.swing.JLabel productname2;
    private javax.swing.JLabel productname3;
    private javax.swing.JLabel productname4;
    private javax.swing.JLabel productname5;
    private javax.swing.JLabel productname6;
    private javax.swing.JTextField search;
    private javax.swing.JButton wishlist;
    private javax.swing.JButton wishlist2;
    private javax.swing.JButton wishlist3;
    private javax.swing.JButton wishlist4;
    private javax.swing.JButton wishlist5;
    private javax.swing.JButton wishlist6;
    // End of variables declaration//GEN-END:variables

    private void performWishlistAction() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

}
